---

---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <script src="https://unpkg.com/peerjs@1.5.2/dist/peerjs.min.js"></script>
    <title>Astro</title>
  </head>
  <body>
    <h1>Astro</h1>
    <video src="" id="video1"></video>
    <video src="" id="video2"></video>
    <div id="message"></div>
    <form id="call">
      <input name="connect" id="connet-peer" />
      <button type="submit">call</button>
    </form>
  </body>
</html>

<script>
  import { Peer } from "peerjs";

  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
    // Access the user's webcam
    navigator.mediaDevices
      .getUserMedia({ video: true })
      .then(function (stream) {
        // Get the video element and set its source to the webcam stream
        var video = document.getElementById("video1") as HTMLVideoElement;
        video.srcObject = stream;
        video.play();
      })
      .catch(function (error) {
        console.error("Error accessing webcam:", error);
      });
  } else {
    console.error("WebRTC is not supported in this browser.");
  }

  const peer = new Peer();
  const message = document.querySelector("#message") as HTMLDivElement;

  peer.on("open", (id) => {
    console.log(id);
  });

  peer.on("connection", (conn) => {
    conn.on("data", (data) => {
      // Will print 'hi!'
      if (!message) return;
      message.innerText = data as string;
    });
    conn.on("open", () => {
      conn.send("hello!");
    });
  });

  document.querySelector("#call")?.addEventListener("submit", (e) => {
    e.preventDefault();
    const peerId = (document.querySelector("#connet-peer") as HTMLInputElement)
      .value;

    navigator.mediaDevices.getUserMedia({ video: true }).then((mainstrem) => {
      var call = peer.call(peerId, mainstrem);
      call.on("stream", function (remoteStream) {
        // Show stream in some video/canvas element.
        var video = document.getElementById("video2") as HTMLVideoElement;
        video.srcObject = remoteStream;
        video.play();
      });
    });
  });

  peer.on("call", function (call) {
    navigator.mediaDevices.getUserMedia({ video: true }).then((mainstrem) => {
      call.answer(mainstrem);
      call.on("stream", function (remoteStream) {
        // Show stream in some video/canvas element.
        var video = document.getElementById("video2") as HTMLVideoElement;
        video.srcObject = remoteStream;
        video.play();
      });
    });
  });
</script>
